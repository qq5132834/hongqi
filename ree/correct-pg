------------修正语法-----------
on batch(id, name) where id = '001' correct city = 'changsha';

ON batch(id, name) WITH t0,t1 WHERE t0.id = t1.id CORRECT t0.name = t1.name;

---创建中间表
CREATE TABLE IF NOT EXISTS ei_dim.batch
(
row_id varchar(255),
source_data_id varchar(255),
last_update_time varchar(255),
id varchar(255),
name varchar(255),
city varchar(255),
batch_id varchar(255) 
) 


---创建可信表
CREATE TABLE IF NOT EXISTS hive.ei_dim.dim_confidence_dimension
(
 row_id varchar,
 column_name varchar,
 credibility bigint,
 create_time bigint,
 last_update_time bigint,
 batch_id varchar
)

---初始化中间表
delete from hive.ei_dim.batch;
insert into hive.ei_dim.batch(row_id, source_data_id, last_update_time, id, name, city, batch_id ) values('11111','dsid0.table0', 19881010, '001', 'java', 'shenzhen', 'batch01');
insert into hive.ei_dim.batch(row_id, source_data_id, last_update_time, id, name, city, batch_id ) values('22222','dsid0.table0', 19881010, '001', 'go', 'shenzhen', 'batch01');
insert into hive.ei_dim.batch(row_id, source_data_id, last_update_time, id, name, city, batch_id ) values('33333','dsid0.table0', 19881010, '002', 'c', 'shenzhen', 'batch01');
insert into hive.ei_dim.batch(row_id, source_data_id, last_update_time, id, name, city, batch_id ) values('44444','dsid0.table0', 19881010, '002', 'c++', 'shenzhen', 'batch01');
insert into hive.ei_dim.batch(row_id, source_data_id, last_update_time, id, name, city, batch_id ) values('55555','dsid0.table0', 19881010, '003', 'python', 'shenzhen', 'batch01');
select * from hive.ei_dim.batch;


delete from hive.ei_dim.dim_confidence_logs;
select * from hive.ei_dim.dim_confidence_logs;


delete from hive.ei_dim.dim_confidence_dimension;


---内存表
select * from memory.default.correct_dimension;
 


-------------可信表
CREATE TABLE IF NOT EXISTS hive.ei_dim.dim_confidence
(  
 dimension_id       varchar,      
 ds_id              varchar,       
 ds_name            varchar ,      
 db_name            varchar,       
 table_name         varchar,       
 column_name        varchar,       
 credibility        bigint,         
 row_id             varchar,        
 source_table_name  varchar,       
 status             bigint,         
 createby           varchar,        
 createtime         bigint,         
 updateby           varchar,        
 updatetime         bigint         
)

 
 


---------------源数据表可信度
CREATE TABLE IF NOT EXISTS hive.ei_dim.source_confidence 
(
 id           varchar,
 ds_id        varchar,
 ds_name      varchar,
 db_name      varchar,
 table_name   varchar,
 column_name  varchar,
 credibility  bigint,
 status       bigint,
 createby     varchar,
 createtime   bigint,
 updateby     varchar,
 updatetime   bigint
)

insert into hive.ei_dim.source_confidence(ds_id, table_name, column_name, credibility) values('dsid0.table0', 'table0', 'id', 2222);
insert into hive.ei_dim.source_confidence(ds_id, table_name, column_name, credibility) values('dsid0.table0', 'table0', 'name', 3333);
insert into hive.ei_dim.source_confidence(ds_id, table_name, column_name, credibility) values('dsid0.table0', 'table0', 'city', 4444);
---------------------


-------------------接口准备--------------
{
    "dimensionID": "tm.000999001",
    "ruleContent": {
        "name": "rule001",
        "body": "  on batch(id, name) where id = '001' correct city = 'changsha' ;  ",
        "description": "RE 测试规则"
    },
    "type": "procedure"
}
-------------------
{
        "batchID": "batch",
        "batchParentID": "parent",
        "dimensionID": "dimension",
        "inputParams": [],
        "isAsync": 0,
        "isDebug": 0,
        "outputParams": [],
        "ruleID": "793699119789241182"
}
--------------------
alter table batch drop partition (batch_id != 'batch01');


-------------------------------------创建内存表---------------------------

 CREATE TABLE memory.default.correct_ei20200423162203513802818 AS 
 SELECT row_id,source_data_id,last_update_time,id,name,city,batch_id , 
'antrl4' AS expr_name, 
 CASE WHEN  fc_id IS NULL THEN fs_id ELSE fc_id END  AS f_col_id, 
 CASE WHEN  fc_name IS NULL THEN fs_name ELSE fc_name END  AS f_col_name, 
 CASE WHEN  fc_city IS NULL THEN fs_city ELSE fc_city END  AS f_col_city, 
 10000 AS f_expr_name, 
 array_min(ARRAY[ CASE WHEN  fc_id IS NULL THEN fs_id ELSE fc_id END ]) AS f_x, 
 0 AS flag FROM ( 
 SELECT * FROM ( SELECT * FROM hive.ei_dim.batch WHERE id = '001' ) AS tb_dim  LEFT JOIN ( 
 SELECT 
   SUM(CASE column_name WHEN 'id' THEN credibility END) as fc_id, 
   SUM(CASE column_name WHEN 'name' THEN credibility END) as fc_name, 
   SUM(CASE column_name WHEN 'city' THEN credibility END) as fc_city, 
   row_id as fc_row_id 
 FROM hive.ei_dim.dim_confidence 
 GROUP BY row_id 
 )  AS f_credibility ON tb_dim.row_id = f_credibility.fc_row_id 
 LEFT JOIN ( 
 SELECT 
  CASE WHEN fs_id IS NULL THEN 1000 else fs_id END AS fs_id, 
  CASE WHEN fs_name IS NULL THEN 1000 else fs_name END AS fs_name, 
  CASE WHEN fs_city IS NULL THEN 1000 else fs_city END AS fs_city, 
  fs_ds_id 
 FROM 
 (  SELECT    SUM(CASE column_name WHEN 'id' THEN credibility END) as fs_id, 
   SUM(CASE column_name WHEN 'name' THEN credibility END) as fs_name, 
   SUM(CASE column_name WHEN 'city' THEN credibility END) as fs_city, 
   ds_id fs_ds_id 
 FROM hive.ei_dim.source_confidence 
 GROUP BY ds_id 
 ) 
 )  AS f_credibility1 ON tb_dim.source_data_id = f_credibility1.fs_ds_id 
 ) t 



-----------将数据写入新的partition中-------------------- 
insert into hive.ei_dim.batch(row_id, source_data_id, last_update_time, batch_id , id, name, city) 
  select row_id, source_data_id, last_update_time, 'ei20200423162957471054227' as batch_id , id, name, city 
  from hive.ei_dim.batch 
  where row_id not in (  select row_id from memory.default.correct_ei20200423162203513802818 );
  

 INSERT INTO hive.ei_dim.dim_conflict_notify (  dimention_id,batch_id, batch_parent_id, rule_id, table_name , conflict_type,  create_time, last_update_time, rows, columns_name   )  
	SELECT 
	'ei20200423162203513802818',
	'ei20200423162957471054227',
	'ei20200423162213850280790',
	'1730568076142491657',
	'batch',
	'Correct',
	1595658388,
	1595658388,
	check_row(ARRAY[row_id]),
	check_column(ARRAY[name,expr_name], '1') 
	FROM  memory.default.correct_ei20200423162203513802818 WHERE  flag = 2  
	
	
	
	
	;
	
	
	
	SELECT    SUM(CASE column_name WHEN 'id' THEN credibility END) as fs_id, 
   SUM(CASE column_name WHEN 'name' THEN credibility END) as fs_name, 
   SUM(CASE column_name WHEN 'city' THEN credibility END) as fs_city, 
   ds_id fs_ds_id 
 FROM ( select ds_id || '.' || table_name as ds_id, column_name, credibility from mm.mm.mm_source_confidence )  
 GROUP BY ds_id 
	